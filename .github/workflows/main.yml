name: Publish page

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      # 配置环境变量，包括阿里云镜像的名称，版本号，还有命名空间
      ALIYUN_CR_HOST: registry.cn-shenzhen.aliyuncs.com
      ALIYUN_CR_NAMESPACE: alinesno-cloud
      PRO_NAME: alinesno-platform-press
      PRO_VERSION: 0.0.2
      EXPOSE_PORT: 81
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: Install and Build 🔧 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          yarn install
          yarn run build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/.vuepress/dist # The folder the action should deploy.

      - name: Build the Docker image
        run: |
          docker version
          docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} registry.cn-shenzhen.aliyuncs.com
          docker build . --file Dockerfile --tag ${{ env.ALIYUN_CR_HOST }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PRO_NAME }}:${{ env.PRO_VERSION }}
          docker push ${{ env.ALIYUN_CR_HOST }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PRO_NAME }}:${{ env.PRO_VERSION }}

      - name: Deploy Docker multiple command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            docker rm -f ${{ env.PRO_NAME }}
            docker pull ${{ env.ALIYUN_CR_HOST }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PRO_NAME }}:${{ env.PRO_VERSION }}
            docker run -p ${{ env.EXPOSE_PORT }}:80 --name ${{ env.PRO_NAME }} --restart="always" -d ${{ env.ALIYUN_CR_HOST }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PRO_NAME }}:${{ env.PRO_VERSION }}

      # - name: copy k8s yaml file via ssh password
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.K8S_HOST }}
      #     username: ${{ secrets.K8S_HOST_USERNAME }}
      #     password: ${{ secrets.K8S_HOST_PASSWORD }}
      #     port: ${{ secrets.k8S_HOST_PORT }}
      #     source: "k8s-dev.yaml,k8s-dev-ingress.yaml"
      #     target: "projects/${{ env.PRO_NAME }}"

      # - name: Deploy Docker to K8S
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.K8S_HOST }}
      #     username: ${{ secrets.K8S_HOST_USERNAME }}
      #     password: ${{ secrets.K8S_HOST_PASSWORD }}
      #     port: ${{ secrets.k8S_HOST_PORT }}
      #     script: |
      #       kubectl version
      #       kubectl apply -f projects/${{ env.PRO_NAME }}/k8s-dev.yaml
      #       kubectl apply -f projects/${{ env.PRO_NAME }}/k8s-dev-ingress.yaml


